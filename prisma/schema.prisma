// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Periode {
  fromDate DateTime
  toDate   DateTime?
}

model Project {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  uuid         String   @unique @default(uuid())
  name         String
  description  String?
  color        String?
  url          String?
  githubUrl    String?
  isPublic     Boolean
  isPersonal   Boolean
  photoURL     String?
  devPeriode   Periode?
  experienceId String?  @db.ObjectId
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt

  projectTechnologies ProjectTechnology[]
  experience          Experience?         @relation(fields: [experienceId], references: [id])

  @@map("projects")
}

model ProjectTechnology {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  projectId    String @db.ObjectId
  technologyId String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  project    Project    @relation(fields: [projectId], references: [id])
  technology Technology @relation(fields: [technologyId], references: [id])
}

enum TechnologyType {
  framework
  language
  package
  software
}

enum TechnologyTag {
  database
  development
  management
  mobile
  web
}

model Technology {
  id    String          @id @default(auto()) @map("_id") @db.ObjectId
  uuid  String          @unique @default(uuid())
  name  String
  icon  String?
  color String?
  type  TechnologyType
  tags  TechnologyTag[]

  projectTechnologies ProjectTechnology[]

  @@map("technologies")
}

type ExperienceRole {
  name     String
  fromDate DateTime
  toDate   DateTime?
}

model Experience {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  slug        String
  roles       ExperienceRole[]
  description String?
  fromDate    DateTime
  toDate      DateTime?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @default(now()) @updatedAt

  projects Project[]

  @@map("experiences")
}

model Formation {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  slug        String
  description String?
  fromDate    DateTime
  toDate      DateTime?

  @@map("formations")
}
